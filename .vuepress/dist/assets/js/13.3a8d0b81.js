(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{188:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("I was cleaning up my music collection yesterday by using "),a("a",{attrs:{href:"http://www.discogs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discogs"),a("OutboundLink")],1),t._v(", a great online Discography catalogue website, to download missing album cover art. I normally use the long-windedly named "),a("a",{attrs:{href:"http://www.unrealvoodoo.org/hiteck/projects/albumart/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Album Cover Art Downloader"),a("OutboundLink")],1),t._v(" to download cover art, as it's pretty good and can grab images from various sources (amazon.com, yahoo, buy.com) - but there are some albums, especially bootlegs and the like, that aren't on Amazon. While using Discogs I saw that they have artist images (such as the one on the right), and started to download these to use like Album Art images, by naming the file folder.jpg and placing it in the artist's folder (My music collection is organised by First Letter\\Artist\\Album, e.g. A\\Aphex Twin\\Hangable Autobulb).")]),t._v(" "),a("p",[t._v("Of course, I quickly realised that this would take a while to complete, so I searched for any software which took advantage of the Discogs catalogue. Although Wikipedia's page on "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Discogs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discogs"),a("OutboundLink")],1),t._v(" had a list of "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Discogs#Software",target:"_blank",rel:"noopener noreferrer"}},[t._v("software"),a("OutboundLink")],1),t._v(" which uses the Discogs catalog\n, there wasn't any cover art downloading software listed. After a search on google, I found a slightly shorter named piece of software called "),a("a",{attrs:{href:"http://sourceforge.net/projects/album-art",target:"_blank",rel:"noopener noreferrer"}},[t._v("Album Art Downloader"),a("OutboundLink")],1),t._v(" on Sourceforge. This new piece of software does a similar job to Album Cover Art Downloader, but has a lot more plugins to search different sites for album art - including Discogs.")]),t._v(" "),a("p",[t._v("So, after adding a list item for Album Art Downloader to the Wikipedia page, I downloaded installed the software. The Discogs plugin is capable of downloading album art images, which is great, but doesn't download artist images. As Album Art Downloader uses a plugin architecture, I figured it wouldn't be too hard to hack the existing Discogs script to use it for artist images. The existing plugin is at C:\\Program Files\\AlbumArtDownloader\\Scripts\\discogs.boo, and it consists of the following code:")]),t._v(" "),t._m(0),t._m(1),t._v(" "),a("p",[t._v("What we come up with is the following script:")]),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5)])},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("CoverSources")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RegularExpressions")]),t._v("\nimport util\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Discogs")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceName")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Discogs"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceCreator")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Alex Vallat"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceVersion")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.4"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" def "),a("span",{attrs:{class:"token function"}},[t._v("GetThumbs")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("artist"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("album"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  query "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" artist "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" album\n  query"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("' '")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'+'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obidResults "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("GetPage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"http://www.discogs.com/search?type=all&amp;q={0}"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("EncodeUrl")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{attrs:{class:"token comment"}},[t._v("//Get obids")]),t._v("\n  obidRegex "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Regex")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"<a href="')]),t._v("http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token string"}},[t._v('" obid="')]),a("span",{attrs:{class:"token string"}},[t._v('" release="')]),a("span",{attrs:{class:"token string"}},[t._v('">\\\\d+)\\"&gt;]+&gt;(?:&lt;/?em&gt;|(?<name>[^&lt;]+))+</name>"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RegexOptions"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Multiline"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obidMatches "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" obidRegex"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Matches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obidResults"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EstimatedCount "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" obidMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{attrs:{class:"token comment"}},[t._v("//Probably more than this, as some releases might have multiple images")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" obidMatch "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obidMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{attrs:{class:"token comment"}},[t._v('//Construct the release name by joining up all the captures of the "name" group')]),t._v("\n   releaseNameBuilder "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("StringBuilder")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" namePart "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obidMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"name"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Captures"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    releaseNameBuilder"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Append")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("namePart"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   releaseName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" releaseNameBuilder"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("ToString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   "),a("span",{attrs:{class:"token comment"}},[t._v("//Get the image results")]),t._v("\n   imageResults "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("GetPage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"http://www.discogs.com/viewimages?what=R&amp;obid={0}&amp;showpending=1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obidMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"obid"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   imageRegex "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Regex")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"<img src="')]),t._v("\\"),a("span",{attrs:{class:"token string"}},[t._v('" url="')]),a("span",{attrs:{class:"token string"}},[t._v('" />http://www\\\\.discogs\\\\.com/image/R-\\\\d+-\\\\d+.(?:jpe?g|gif|png))\\" width=\\"(?<width>\\\\d+)\\" height=\\"(?<height>\\\\d+)\\""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   imageMatches "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" imageRegex"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Matches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageResults"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EstimatedCount "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" imageMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//Adjust count by how many images for this release")]),t._v("\n\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" imageMatch "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" imageMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Add")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"url"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" releaseName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Int32"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"width"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Int32"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"height"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" def "),a("span",{attrs:{class:"token function"}},[t._v("GetResult")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" param\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("Well, I figured it wouldn't be too hard to make a copy of this and edit it to download artist images. The main changes need to be to change the Class name (to DiscogsArtist), change the plugin details, make the first search look for artists only (change "),a("em",[t._v('query as string = artist + " " + album')]),t._v(" to "),a("em",[t._v("query as string = album")]),t._v("), remove the extra code between the artist/album search and the image search and change the RegEx search for images within the page to search for files beginning with "),a("em",[t._v("A-")]),t._v(" (Artist) instead of "),a("em",[t._v("R-")]),t._v(" (Release).")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("CoverSources")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text")]),t._v("\nimport "),a("span",{attrs:{class:"token class-name"}},[t._v("System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RegularExpressions")]),t._v("\nimport util\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("DiscogsArtist")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceName")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Discogs Artist"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceCreator")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Mark Honeychurch"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("SourceVersion")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.1"')]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" def "),a("span",{attrs:{class:"token function"}},[t._v("GetThumbs")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("artist"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("album"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  query "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" album\n  query"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("' '")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'+'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{attrs:{class:"token comment"}},[t._v("//Get the image results")]),t._v("\n  imageResults "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("GetPage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"http://www.discogs.com/viewimages?artist={0}"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("EncodeUrl")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  imageRegex "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Regex")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"<img src="')]),t._v("\\"),a("span",{attrs:{class:"token string"}},[t._v('" url="')]),a("span",{attrs:{class:"token string"}},[t._v('" />http://www\\\\.discogs\\\\.com/image/A-\\\\d+-\\\\d+.(?:jpe?g|gif|png))\\" width=\\"(?<width>\\\\d+)\\" height=\\"(?<height>\\\\d+)\\""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  imageMatches "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" imageRegex"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Matches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageResults"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EstimatedCount "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" imageMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//Adjust count by how many images for this release")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" imageMatch "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" imageMatches"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   coverart"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Add")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"url"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" artist"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Int32"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"width"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Int32"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("imageMatch"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Groups"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"height"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" def "),a("span",{attrs:{class:"token function"}},[t._v("GetResult")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" param\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("I saved this as "),s("em",[this._v("discogartists.boo")]),this._v(" and copied it to the plugins directory. When I first started up Album Art Downloader, I received complaints about indenting - as it turns out that indenting is used to mark loops and the like in the plugin. After fixing the indenting, Album Art Downloader ran without any complaints - woo hoo!")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Using the plugin is a bit of a fudge! First, to make sure each artist's folder shows up we need to have at least one file in each of them. My quick fix was to browse through each of the folders containing artists in turn, turning on the "),s("em",[this._v("Thumbnails")]),this._v(" view. This causes windows to create a Thumbs.db file in each artist's folder.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("Run Album Art Downloader, and then ensure that only the "),a("em",[t._v("Discogs Artists")]),t._v(" plugin is selected in the "),a("em",[t._v("Sources:")]),t._v(" box on the right. Next click on "),a("em",[t._v("File, New, File Browser")]),t._v(". In the browser window, first click on the "),a("em",[t._v("Options...")]),t._v(" to expand the Options panel, then ensure the "),a("em",[t._v("Include subfolders when searching for audio files")]),t._v(" tickbox is checked and select the "),a("em",[t._v("Use file path pattern matching:")]),t._v(" radio button. Click the "),a("em",[t._v("Search")]),t._v(" button in the top-right of the window, and then once the search has completed click the "),a("em",[t._v("Artist")]),t._v(" column header to organise the results by Artist name. Now look for all the results grouped together with the parent folder (in my case, A-Z) name as the "),a("em",[t._v("Artist")]),t._v(" name. Tick each of the boxes and then click on the "),a("em",[t._v("Get Artwork for Selection...")]),t._v(" button in the bottom-right of the window. Now for each window that pops up, select the image you'd like (left-click on the image to ee a full size version) and click the floppy disc button to save the file to your artist's folder as folder.jpg.")])}],!1,null,null,null);e.options.__file="downloading-music-artist-images.md";s.default=e.exports}}]);